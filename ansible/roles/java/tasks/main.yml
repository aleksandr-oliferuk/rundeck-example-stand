---
- name: Get Java release name
  uri:
    url: "{{ openjdk_api_url }}"
    return_content: yes
  register: openjdk_json
  when:  not ansible_check_mode

- name: Update Java facts
  set_fact:
    java_release: "{{ openjdk_json.json[0].release_name }}"
    java_binary_link: "{{ openjdk_json.json[0].binaries[11].binary_link }}"
  when: java_release != "latest" and not ansible_check_mode

- name: Update Java facts for latest release
  set_fact:
    java_release: "{{ openjdk_json.json.release_name }}"
    java_binary_link: "{{ openjdk_json.json.binaries[11].binary_link }}"
  when: java_release == "latest" and not ansible_check_mode

- name: Create Java home directory
  file:
    path: "{{ java_home_directory }}"
    state: directory
    owner: root
    group: root
    mode: "u=rwx,go=rx"

- name: Download and unarchive Java
  unarchive:
    src: "{{ java_binary_link }}"
    dest: "{{ java_home_directory }}"
    extra_opts: [--strip-components=1]
    remote_src: true
    keep_newer: yes
  when: not ansible_check_mode

- name: Create symbolic link to default user sbin
  file:
    src: "{{ java_home_directory }}/bin/java"
    dest: "/usr/sbin/java"
    state: link
  when: not ansible_check_mode
